# Generated by Django 3.1.6 on 2021-02-25 06:49

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Compony',
            fields=[
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_time_created', models.DateTimeField(auto_now_add=True)),
                ('company_name', models.CharField(max_length=150)),
                ('comapny_address', models.CharField(max_length=150)),
                ('company_city', models.CharField(max_length=150)),
                ('company_location', models.CharField(max_length=150)),
                ('company_pin', models.CharField(max_length=150)),
                ('company_district', models.CharField(max_length=150)),
                ('company_satate', models.CharField(max_length=150)),
                ('company_gstin', models.CharField(max_length=150)),
                ('company_email', models.CharField(max_length=150)),
                ('company_phone', models.CharField(max_length=150)),
                ('company_logo', models.TextField()),
                ('company_signature', models.TextField()),
                ('company_admin', models.CharField(max_length=150)),
                ('company_id', models.CharField(default='4768bdb9', max_length=150, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_time_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=150)),
                ('logo', models.TextField()),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('location', models.CharField(blank=True, max_length=150, null=True)),
                ('pincode', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(blank=True, max_length=150, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('district', models.CharField(blank=True, max_length=150, null=True)),
                ('gst_number', models.CharField(max_length=150)),
                ('gst_type', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=150, null=True)),
                ('store_id', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_time_created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=150)),
                ('hsn', models.CharField(blank=True, max_length=150, null=True)),
                ('base_price', models.FloatField()),
                ('sales_price', models.FloatField()),
                ('stock', models.IntegerField()),
                ('store_id', models.CharField(max_length=150)),
                ('unit', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='TaxGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_time_created', models.DateTimeField(auto_now_add=True)),
                ('hsn_code', models.CharField(max_length=150)),
                ('hsn_sgst', models.CharField(max_length=150)),
                ('hsn_cgst', models.CharField(max_length=150)),
                ('hsn_sess', models.CharField(max_length=150)),
                ('hsn_others', models.CharField(max_length=150)),
                ('hsn_user_id', models.CharField(default='4c7923ba', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='invoice.inventory')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_time_created', models.DateTimeField(auto_now_add=True)),
                ('company_name', models.CharField(max_length=150)),
                ('comapny_address', models.CharField(max_length=150)),
                ('company_city', models.CharField(max_length=150)),
                ('company_location', models.CharField(max_length=150)),
                ('company_pin', models.CharField(max_length=150)),
                ('company_district', models.CharField(max_length=150)),
                ('company_state', models.CharField(max_length=150)),
                ('company_gstin', models.CharField(max_length=150)),
                ('company_email', models.EmailField(max_length=254)),
                ('company_phone', models.CharField(max_length=150)),
                ('company_logo', models.TextField()),
                ('due_amount', models.FloatField()),
                ('sgst', models.FloatField()),
                ('cgst', models.FloatField()),
                ('status', models.BooleanField()),
                ('invoice_type', models.CharField(max_length=150)),
                ('digital_signature', models.TextField()),
                ('pdf', models.FileField(upload_to='')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer', to='invoice.customer')),
                ('product_list', models.ManyToManyField(related_name='orderitems', to='invoice.OrderItems')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=150, null=True)),
                ('subscription_plan', models.CharField(blank=True, max_length=100, null=True)),
                ('subscription_start', models.DateField(auto_now_add=True)),
                ('subscription_end', models.DateField(blank=True, null=True)),
                ('subscription_status', models.BooleanField(default=True)),
                ('user_status', models.BooleanField(default=True)),
                ('unique_id', models.CharField(default='81b5ea07', max_length=100, primary_key=True, serialize=False)),
                ('token', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
